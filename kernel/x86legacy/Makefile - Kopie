
CFLAGS = -I.
AFLAGS = -a x86 -f elf -g null -m x86
LFLAGS = -T link.ld -s
OFLAGS = -O binary -j .text
DFLAGS = -S -D -b binary -mi386:x86-64 -Maddr64,data32,intel

OUTDIR = .\bin
ODIR = .\o
DEPS = 

BOOTSECTOR_OBJ = bootsector.o
BOOTLOADER_OBJ = bootloader.o bootloader_start.o

BOOTSECTOR_BIN = bootsector
BOOTLOADER_BIN = bootloader




makeall: $(BOOTSECTOR_BIN).bin $(BOOTLOADER_BIN).bin $(BOOTSECTOR_BIN).dump $(BOOTLOADER_BIN).dump




%.o: %.asm $(DEPS)
	yasm -o $@ $< $(AFLAGS)

%.o: %.c $(DEPS)
	gcc -c -o $@ $< $(CFLAGS)

%.dump: %.bin
	objdump --disassemble "$(OUTDIR)\$<" > "$(OUTDIR)\$@" $(DFLAGS)

%.bin: %.out
	objcopy $(OUTDIR)\$< $(OUTDIR)\$@ $(OFLAGS)




$(BOOTSECTOR_BIN).out: $(BOOTSECTOR_OBJ)
	ld -o $(OUTDIR)\$@ $^ $(LFLAGS)

$(BOOTLOADER_BIN).out: $(BOOTLOADER_OBJ)
	ld -o $(OUTDIR)\$@ $^ $(LFLAGS)


